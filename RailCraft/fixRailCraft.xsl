<?xml version="1.0" encoding="ASCII"?>

<!--
  Copy source document into target without changes.
-->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:output method="xml" indent="yes" encoding="ASCII" />
<xsl:template match="class[@name='railcraft/common/rails/ItemTrack']//method[@name='filterData']//ICONST_0">
	<ILOAD var="1"/>
</xsl:template>
<xsl:template match="class[@parent='net/minecraft/server/Container']/field[last()]">
	<xsl:copy><xsl:apply-templates select="@*|*|text()|processing-instruction()"/></xsl:copy>
	<field access="private " name="__autogenerated_inventory" desc="Lnet/minecraft/server/IInventory;" />
</xsl:template>
<xsl:template match="class[@parent='net/minecraft/server/Container']/method[last()]">
	<xsl:copy><xsl:apply-templates select="@*|*|text()|processing-instruction()"/></xsl:copy>
	<method access="public " name="getInventory" desc="()Lnet/minecraft/server/IInventory;">
    <exceptions/>
    <code>
      <Label name="0"/>
      <ALOAD var="0"/>
      <GETFIELD owner="{parent::class/@name}" name="__autogenerated_inventory" desc="Lnet/minecraft/server/IInventory;"/>
      <ARETURN/>
      <Label name="1"/>
      <LocalVar name="this" desc="L{parent::class/@name};" start="0" end="1" var="0"/>
      <Max maxStack="1" maxLocals="1"/>
    </code>
  </method>
</xsl:template>
<xsl:template match="class[@parent='net/minecraft/server/Container']/method[@name='&lt;init&gt;']/code/INVOKESPECIAL[@owner=ancestor::class/@parent and @name='&lt;init&gt;']">
	<xsl:copy><xsl:apply-templates select="@*|*|text()|processing-instruction()"/></xsl:copy>
	<ALOAD var="0"/>
	<ALOAD var="2"/>
	<PUTFIELD owner="{ancestor::class/@name}" name="__autogenerated_inventory" desc="Lnet/minecraft/server/IInventory;" />
	<ALOAD var="0"/>
    <ALOAD var="1"/>
    <GETFIELD owner="net/minecraft/server/PlayerInventory" name="player" desc="Lnet/minecraft/server/EntityHuman;"/>
	<INVOKEVIRTUAL owner="{ancestor::class/@name}" name="setPlayer" desc="(Lnet/minecraft/server/EntityHuman;)V"/>
</xsl:template>

<!-- copy everything -->
<xsl:template match="@*|*|text()|processing-instruction()">
  <xsl:copy><xsl:apply-templates select="@*|*|text()|processing-instruction()"/></xsl:copy>
</xsl:template>

</xsl:stylesheet>